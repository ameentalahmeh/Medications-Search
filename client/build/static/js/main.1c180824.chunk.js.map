{"version":3,"sources":["components/SearchBar/index.js","components/Table/index.js","Views/MedicationsView/index.js","Views/HomeView/index.js","App.js","index.js"],"names":["SearchBar","props","className","id","type","name","placeholder","value","onClick","onAction","Table","Medications","medications","MedicationsKeys","Object","keys","map","mkey","index","key","medication","decription","drugcode","diseasecode","HomeView","readInputs","document","getElementById","handlingGetAction","setState","isAction","inputsArr","query","forEach","i","slice","fetch","then","res","json","result","success","errCode","msgErr","message","code","state","this","length","MedicationsView","Component","Empty","App","path","component","ReactDOM","render"],"mappings":"iWAgCeA,MA7Bf,SAAmBC,GACf,OACE,yBAAKC,UAAY,iBACf,yBAAKA,UAAY,eACf,2BAAQC,GAAG,WACHC,KAAK,OACLC,KAAK,WACLC,YAAY,wBAEpB,2BAAQH,GAAG,cACHC,KAAK,OACLC,KAAK,cACLC,YAAY,2BAEpB,4BAAQH,GAAK,OACLC,KAAM,SACNC,KAAK,QACP,4BAAQE,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGN,2BAAQH,KAAK,SACLG,MAAM,SACNC,QAAWP,EAAMQ,a,MCcpBC,MArCf,SAAeT,GACb,IAAMU,EAAcV,EAAMW,YAAY,GAChCC,EAAkBC,OAAOC,KAAKJ,GACpC,OACU,+BACA,+BAEE,4BAEEE,EAAgBG,KAAI,SAACC,EAAMC,GACzB,OACE,wBAAIC,IAAOD,GAAX,IAAsBD,QAO9B,+BAEEhB,EAAMW,YAAYI,KAAI,SAACI,EAAWF,GAAW,IACpCf,EAAgDiB,EAAhDjB,GAAIkB,EAA4CD,EAA5CC,WAAYC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,YAAanB,EAASgB,EAAThB,KAC9C,OACE,wBAAIe,IAAOD,GACX,4BAAKf,GACL,4BAAKkB,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKnB,UCrBRO,MAPf,SAAsBV,GAChB,OACE,6BACE,kBAAC,EAAD,CAAOW,YAAeX,EAAMW,gBCDhCY,G,kBACJ,aAAc,IAAD,8BACX,+CASFC,WAAc,WAMZ,MAFgB,CAHDC,SAASC,eAAe,YACrBD,SAASC,eAAe,eAC/BD,SAASC,eAAe,UAbxB,EAkBbC,kBAAoB,WAGlB,EAAKC,SAAS,CAAEC,UAAU,IAG1B,IAAMC,EAAY,EAAKN,aAGnBO,EAAQ,IACZD,EAAUE,SAAS,SAASC,GAC1BF,EAAQA,GAASE,EAAE7B,KAAO,MAAO6B,EAAE3B,MAAQ2B,EAAE3B,MAAQ2B,EAAE7B,MAAQ,OAEjE2B,EAAQA,EAAMG,MAAM,GAAI,GAGxBC,MAAM,0BAA4BJ,GACjCK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,IAGkB,IAAnBA,EAAOC,QACJ,EAAKZ,SAAS,CAAEa,QAAQ,EAAGC,OAAQH,EAAOI,WAGrB,IAAnBJ,EAAOC,SACO,IAAhBD,EAAOK,MACX,EAAKhB,SAAS,CAAEjB,YAAa4B,EAAO5B,kBA3CxC,EAAKkC,MAAQ,CACTH,OAAS,GACTD,QAAU,EACVZ,UAAU,EACVC,UAAW,GACXnB,YAAc,IAPP,E,sEAoDX,OACE,yBAAKV,UAAY,QACf,4DACA,kBAAC,EAAD,CAAWO,SAAYsC,KAAKnB,oBAE1BmB,KAAKD,MAAMhB,SACT,yBAAK5B,UAAW,0BACZ,0EAEM,yBAAKC,GAAK,WAEwB,IAAlC4C,KAAKD,MAAMlC,YAAYoC,OACrB,kBAACC,EAAD,CAAiBrC,YAAemC,KAAKD,MAAMlC,cAET,IAAlCmC,KAAKD,MAAMlC,YAAYoC,OACvB,kBAAC,EAAD,MAEA,OAKb,U,GA3EYE,cAiFjBC,EAAQ,kBAAM,iDACL3B,ICzEA4B,G,uLAPb,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW9B,S,GAJjB0B,cCDlBK,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAASC,eAAe,W","file":"static/js/main.1c180824.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar(props) {\n    return(\n      <div className = \"formContainer\">\n        <div className = \"InputParams\">\n          <input  id=\"drugCode\"\n                  type=\"text\"\n                  name=\"drugCode\"\n                  placeholder=\"Enter the drug code\"\n            />\n          <input  id=\"diseaseCode\"\n                  type=\"text\"\n                  name=\"diseaseCode\"\n                  placeholder=\"Enter the disease code\"\n            />\n          <select id = \"type\"\n                  type =\"number\"\n                  name=\"type\" >\n                <option value=\"\"> Type </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n          </select>\n        </div>\n          <input  type=\"submit\"\n                  value=\"Search\"\n                  onClick = {props.onAction}\n            />\n      </div>\n    )\n}\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Table.css\";\n\n\nfunction Table(props) {\n  const Medications = props.medications[0];\n  const MedicationsKeys = Object.keys(Medications);\n  return(\n            <table>\n            <thead>\n            {\n              <tr>\n              {\n                MedicationsKeys.map((mkey, index) => {\n                  return(\n                    <th key = {index} > { mkey }</th>\n                  )\n                })\n              }\n              </tr>\n            }\n            </thead>\n            <tbody>\n            {\n              props.medications.map((medication,index) => {\n                const {id, decription, drugcode, diseasecode, type}  = medication;\n                return(\n                  <tr key = {index}>\n                  <td>{id}</td>\n                  <td>{decription}</td>\n                  <td>{drugcode}</td>\n                  <td>{diseasecode}</td>\n                  <td>{type}</td>\n                  </tr>\n                )\n              })\n            }\n            </tbody>\n            </table>\n          )\n        }\nexport default Table;\n","import React from \"react\";\nimport Table from '../../components/Table';\n\n\nfunction Medications (props){\n      return(\n        <div>\n          <Table medications = {props.medications}/>\n        </div>\n      )\n    }\nexport default Medications;\n","import React, { Component } from \"react\";\nimport SearchBar from '../../components/SearchBar';\nimport MedicationsView from '../MedicationsView';\n// import ErrorView from '../ErrorView';\nimport \"./Home.css\";\n\nclass HomeView extends Component {\n  constructor(){\n    super();\n    this.state = {\n        msgErr : '',\n        errCode : 0,\n        isAction: false,\n        inputsArr: [],\n        medications : [],\n      };\n  }\n  readInputs  = () => {\n    var drugCode = document.getElementById(\"drugCode\");\n    var diseaseCode = document.getElementById(\"diseaseCode\");\n    var type = document.getElementById(\"type\");\n    var inputsArr = [drugCode, diseaseCode, type];\n\n    return inputsArr;\n  }\n  handlingGetAction = () => {\n\n    // handling the button action.\n    this.setState({ isAction: true})\n\n    // read Inputs before fetching.\n    const inputsArr = this.readInputs();\n\n    // Prepare the search query\n    var query = '?';\n    inputsArr.forEach( function(i) {\n      query = query + (i.name + \"=\" + (i.value ? i.value : i.name) + \"&\");\n    })\n    query = query.slice(0, -1);\n\n    // Do fetch.\n    fetch('/api/getMedicationsInfo' + query)\n    .then(res => res.json())\n    .then(result => {\n\n      // handling response for failed request.\n      if(result.success === false ){\n            this.setState({ errCode:1, msgErr: result.message})\n        }\n      // handling response for successed request.\n      else if(result.success === true){\n        if (result.code === 2) {\n        this.setState({ medications: result.medications})\n      }\n      }\n    })\n}\n\n  render(){\n    return(\n      <div className = 'Home'>\n        <h1> Drugs & Medications Search </h1>\n        <SearchBar onAction = {this.handlingGetAction} />\n        {\n          this.state.isAction ?\n            <div className =\"MedicationsViewSection\">\n                <h2> The retrieved drugs and medications are: </h2>\n                {\n                      <div id = 'resView'>\n                      {\n                      this.state.medications.length !== 0 ?\n                        <MedicationsView medications = {this.state.medications}/>\n                        :\n                        this.state.medications.length === 0 ?\n                        <Empty />\n                        :\n                        null\n                      }\n                     </div>\n                }\n            </div>\n          :null\n        }\n      </div>\n    )\n    }\n  }\nconst Empty = () => <h1> No Medications </h1>;\nexport default HomeView;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport HomeView from \"./Views/HomeView\";\n// import ErrorView from \"./Views/ErrorView\";\nimport './App.css';\n\nclass App extends Component {\n  render(){\n  return (\n    <Router>\n        <Route path=\"/\" component={HomeView} />\n    </Router>\n  );\n}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}